<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<title>Redux 安裝</title>
	<script src="https://unpkg.com/react@15/dist/react.min.js"></script>
	<script src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
	<script src="https://unpkg.com/redux@3.7.2/dist/redux.min.js"></script>
	<style type="text/css">
		.head{font-size:24px;font-weight:bold;}
	</style>
	<script type="text/babel">
		let store=Redux.createStore(function(currentState, action){
			switch(action.type){
				case "ADD_MAX":
					return {max:currentState.max+1};
				default:
					return currentState;
			}
		}, {max:5});
		store.subscribe(function(){
			
		});
		store.dispatch({type:"ADD_MAX"});
		// 設計組件類別
		class MyHead extends React.Component{
			render(){
				return React.createElement("div",
					{className:"head", style:{color:this.props.color}},
						"Hello World "+this.props.level);
				//return <div className="head" style={{color:this.props.color}}>Hello World {this.props.level}</div>;
			}
		}
		class MyHeadList extends React.Component{
			render(){
				return <div>
					<MyHead level="1" color="red" />
					<MyHead level="2" color="green" />
					<MyHead level="3" color="blue" />
				</div>;
			}
		}
		window.addEventListener("load", ()=>{
			// 1. 建立自訂的 React Element
			let elem=<MyHeadList/>; // React.createElement(MyHeadList);
			// 2. 將建立好的 React Element 畫到容器中 
			ReactDOM.render(
				elem, document.body
			);
		});
	</script>
</head>
<body>
</body>
</html>